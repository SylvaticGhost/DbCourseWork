@page "/Vehicles"
@using Core.Models
@using Core.Models.DTOs
@using Services
@using WebUI.Components.Elements
@using WebUI.Components.Elements.Forms
@inject IVehicleService VehicleService
@inherits MutableListPage<Vehicle, Vehicle, VehicleUpsertParam>

<body>
<TableEntity
    @ref="TableEntity"
    TEntity="Vehicle"
    DisplayName="Транспортні засоби"
    Search="VehicleService.Search"
    DeleteEntity="VehicleService.Delete"
    UpdateEntity="InvokeUpdateModel" 
/>
<div class="flex flex-col">
    <VehicleUpsertForm
        Param="UpsParam"
        Create="AddRoute"
    />
</div>
<Modal @ref="ModalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Модифікувати маршрут</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <VehicleUpsertForm
                Param="UpsParam"
                Source="SelectedEntity"
                Update="UpdateVehicle"
            />
        </ModalBody>
    </ModalContent>
</Modal>

</body>

@code {
    protected override VehicleUpsertParam UpsParam { get; set; } = VehicleUpsertParam.Empty();
    
    private Task AddRoute(VehicleUpsertParam param) =>
        ContentChange(r => VehicleService.Create(r), param);
    
    private Task UpdateVehicle(Vehicle vehicle, VehicleUpsertParam param) =>
        ContentChange(r => VehicleService.Update(vehicle, r), param);
}
    