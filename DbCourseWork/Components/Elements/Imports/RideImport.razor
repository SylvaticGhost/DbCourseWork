@using Ardalis.GuardClauses
@using Ardalis.Result
@using DbCourseWork.Helpers
@using DbCourseWork.Models
@using DbCourseWork.Utils
<FilePicker Placeholder="Завантажте Excel файл з поїздками"
            Multiple
            Filter="@ExcelHelper.FileFormatsAsString"
            Upload="OnFileUpload"
            ShowMode="FilePickerShowMode.List"
            Class="border-primary rounded p-2"/>

@if (_rides is not null)
{
    <Table Striped Hoverable>
        <TableHeader>
            <TableRow>
                <TableHeaderCell>Id</TableHeaderCell>
                <TableHeaderCell>ТЗ</TableHeaderCell>
                <TableHeaderCell>Маршрут</TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>
            @foreach (var ride in _rides)
            {
                <TableRow>
                    <TableRowHeader>@ride.Id</TableRowHeader>
                    <TableRowCell>@ride.Vehicle</TableRowCell>
                    <TableRowCell>@ride.Route</TableRowCell>
                </TableRow>
            }
        </TableBody>
    </Table>
}

@code {
    private List<Ride>? _rides;
    
    [CascadingParameter(Name = "PageError")]
    private PageError PageError { get; set; }  = new();
    
    [CascadingParameter(Name = "ImportDataDto")]
    private ImportDataDto ImportDataDto { get; set; } = new();

    async Task OnFileUpload(FileUploadEventArgs e)
    {
        Guard.Against.Null(ImportDataDto);
        Result<List<Ride>> result =
            await FileUploader.OnFileUpload(e, ExcelReader.ReadRides);

        FileUploader.HandleResult(result, ref _rides, PageError);
        Console.WriteLine($"Retrieved {_rides?.Count} transactions");
        ImportDataDto.Rides = _rides;
        StateHasChanged();
    }

}