@page "/Vehicles"
@using Core.Enums
@using Core.Models
@using Core.Models.Systems
@using Services
@using WebUI.Components.Elements
@using WebUI.Utils
@using Field = Blazorise.Field
@using WebUI.Components
@inject IVehicleService VehicleService

<body>
<TableEntity
    TEntity="Vehicle"
    DisplayName="Транспортні засоби"
    Search="VehicleService.Search"
/>
<div class="flex flex-col">
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile">
        <FieldLabel>Номер</FieldLabel>
        <FieldBody>
            <NumericEdit @bind-Value="_number" Size="Size.Small" Max="9999" Style="width: 80px;"/>
        </FieldBody>
    </Field>
    <Field ColumnSize="ColumnSize.Is6.OnDesktop.Is12.OnMobile">
        <FieldLabel>Вид</FieldLabel>
        <FieldBody>
            <EnumSelector SelectedValue="_vehicleType" 
                          SelectedValueChanged="o => _vehicleType = VehicleMapper.ToVehicleType((string)o)" 
                          Enum="typeof(VehicleType)"/>
        </FieldBody>
    </Field>
    <Button class="btn btn-primary" @onclick="AddRoute">Додати</Button>
</div>

</body>

@code {
    private TableEntity<Vehicle>? _tableEntity;
    
    private PageError _pageError = new();

    private int _number = 1;

    private VehicleType _vehicleType = VehicleType.Автобус;

    private async Task AddRoute()
    {
        Console.WriteLine($"Adding vehicle with number: {_number} and type: {_vehicleType}");
        var result = await VehicleService.Create(new Vehicle(_number, _vehicleType));
        Console.WriteLine($"Result: {result.IsSuccess}");
        if (!result.IsSuccess)
        {
            _pageError.SetOnFailure(result);
            return;
        }
        
        ClearForm();
        
        if(_tableEntity is not null)
            await _tableEntity.ReloadData();
    }

    private void ClearForm()
    {
        _number = 1;
        _vehicleType = VehicleType.Автобус;
    }

}
    