@using Ardalis.GuardClauses
@using Ardalis.Result
@using Core.Models
@using Core.Models.DTOs
@using Services
@using WebUI.Utils
<FilePicker Placeholder="Завантажте Excel файл з проїними картками"
            Multiple
            Filter="@ExcelReader.FileFormatsAsString"
            Upload="OnFileUpload"
            ShowMode="FilePickerShowMode.List"
            Class="border-primary rounded p-2"/>

@if (_cards is not null)
{
    <Table>
        <TableRow>
            <TableHeader>
                @foreach (string column in TravelCard.FormFields)
                {
                    <TableHeaderCell>@column</TableHeaderCell>
                }
            </TableHeader>
        </TableRow>
        <TableBody>
            @foreach (var card in _cards)
            {
                <TableRowHeader>@card.CodeAsString</TableRowHeader>
                <TableRowCell>@card.OwnerId</TableRowCell>
                <TableRowCell>@card.ReleaseDate.ToString("yyyy MMMM dd")</TableRowCell>
                <TableRowCell>@card.ExpirationDate.ToString("yyyy MMMM dd")</TableRowCell>
            }
        </TableBody>
    </Table>
}

@code {
    private List<TravelCard>? _cards;
    
    [CascadingParameter(Name = "PageError")]
    private PageError PageError { get; set; }  = new();
    
    [CascadingParameter(Name = "ImportDataDto")]
    private ImportDataDto ImportDataDto { get; set; } = new();
    
    private async Task OnFileUpload(FileUploadEventArgs e)
    {
        Guard.Against.Null(ImportDataDto);
        Result<List<TravelCard>> result =
            await FileUploader.OnFileUpload(e, ExcelReader.ReadTravelCards);
        
        FileUploader.HandleResult(result, ref _cards, PageError);
        Console.WriteLine($"Retrieved {_cards?.Count} cards");
        ImportDataDto.TravelCards = _cards;
        StateHasChanged();
    }

}